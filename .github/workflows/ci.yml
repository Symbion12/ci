name: CI Pipeline

on:
  push:
    paths:
      - index.html

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Проверить код из репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull Nginx Docker image
        run: docker pull nginx:latest

      # Поднять контейнер с Nginx
      - name: Start Nginx container
        run: |
          docker run -d --name nginx-test -p 9889:80 -v ${{ github.workspace }}/index.html:/usr/share/nginx/html/index.html nginx
          sleep 5

      # Проверить, что Nginx возвращает код 200
      - name: Verify HTTP response
        run: |
          HTTP_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" http://localhost:9889)
          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "Ошибка HTTP не 200, $HTTP_CODE"
            MESSAGE="HTTP не 200  $HTTP_CODE"
            echo "$MESSAGE"
            curl -s -X POST "https://api.telegram.org/bot7910991430:AAGa0u46FVrToCNddHdVY9kPVzUJG5CiAwc/sendMessage" -d chat_id=5031155088 -d text="$MESSAGE" 
           exit 1
          else
            MESSAGE="HTTP 200 OK"
            echo "$MESSAGE"
            curl -s -X POST "https://api.telegram.org/bot7910991430:AAGa0u46FVrToCNddHdVY9kPVzUJG5CiAwc/sendMessage" -d chat_id=5031155088 -d text="$MESSAGE"
          fi

      # Проверить MD5-сумму файла
      - name: Verify MD5 checksum
        run: |
          LOCAL_MD5=$(md5sum index.html | awk '{ print $1 }')
          SERVER_MD5=$(curl -s http://localhost:9889 | md5sum | awk '{ print $1 }')
          if [ "$LOCAL_MD5" != "$SERVER_MD5" ]; then
            echo "MD5 checksum несовпадает!"
            echo "Local: $LOCAL_MD5, Server: $SERVER_MD5"
            exit 1
          else
            echo "Checksum совпадает"  
          fi
              
      - name: Notify on failure
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot7910991430:AAGa0u46FVrToCNddHdVY9kPVzUJG5CiAwc/sendMessage" -d chat_id=5031155088 -d text="Ошибка CI: Job ${{ github.job }} in ${{ github.repository }}"
          
